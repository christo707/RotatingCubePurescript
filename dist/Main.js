// Generated by purs bundle 0.11.7
var PS = {};
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var compose = function (dict) {
      return dict.compose;
  };
  exports["compose"] = compose;
  exports["Semigroupoid"] = Semigroupoid;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS["Control.Semigroupoid"] = PS["Control.Semigroupoid"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var Category = function (Semigroupoid0, id) {
      this.Semigroupoid0 = Semigroupoid0;
      this.id = id;
  };
  var id = function (dict) {
      return dict.id;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["Category"] = Category;
  exports["id"] = id;
  exports["categoryFn"] = categoryFn;
})(PS["Control.Category"] = PS["Control.Category"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Category = PS["Control.Category"];
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  exports["flip"] = flip;
  exports["const"] = $$const;
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
    "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  exports["unit"] = $foreign.unit;
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];        
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["void"] = $$void;
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];        
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  };                      
  var apply = function (dict) {
      return dict.apply;
  };
  var applySecond = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.id(Control_Category.categoryFn)))(a))(b);
          };
      };
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
  exports["applySecond"] = applySecond;
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
})(PS["Control.Applicative"] = PS["Control.Applicative"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };                     
  var bind = function (dict) {
      return dict.bind;
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS["Control.Monad"] = PS["Control.Monad"] || {});
(function(exports) {
    "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var monadEff = new Control_Monad.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Control_Bind.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Control_Apply.Apply(function () {
      return functorEff;
  }, Control_Monad.ap(monadEff));
  var applicativeEff = new Control_Applicative.Applicative(function () {
      return applyEff;
  }, $foreign.pureE);
  var functorEff = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
    "use strict";

  var xxx = 0;
  var yyy = 0;



  exports.getMousePos = function(String){
    return function(){
      if(String == 'x')
       return xxx;
      else return yyy;
    };
  };

  exports.querySelectorImpl = function(r, f, s) {
      return function() {
          var result = document.querySelector(s);
          return result ? f(result) : r;
      };
  };

  exports.addEventListener = function(name) {
      return function(handler) {
          return function(node) {
              return function() {
                  node.addEventListener(name, function(e) {
                      handler();
                      xxx = e.pageX;
                      yyy = e.pageY;
                      e.preventDefault();
                  });
              };
          };
      };
  };
})(PS["Control.Monad.Eff.DOM"] = PS["Control.Monad.Eff.DOM"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Function = PS["Data.Function"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["mempty"] = mempty;
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Control.Monad.Eff.DOM"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Prelude = PS["Prelude"];        
  var querySelector = function (s) {
      return $foreign.querySelectorImpl(Data_Maybe.Nothing.value, Data_Maybe.Just.create, s);
  };
  exports["querySelector"] = querySelector;
  exports["getMousePos"] = $foreign.getMousePos;
  exports["addEventListener"] = $foreign.addEventListener;
})(PS["Control.Monad.Eff.DOM"] = PS["Control.Monad.Eff.DOM"] || {});
(function(exports) {
    "use strict";

  exports.newRef = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.readRef = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports["modifyRef'"] = function (ref) {
    return function (f) {
      return function () {
        var t = f(ref.value);
        ref.value = t.state;
        return t.value;
      };
    };
  };
})(PS["Control.Monad.Eff.Ref"] = PS["Control.Monad.Eff.Ref"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var modifyRef = function (ref) {
      return function (f) {
          return $foreign["modifyRef'"](ref)(function (s) {
              return {
                  state: f(s),
                  value: Data_Unit.unit
              };
          });
      };
  };
  exports["modifyRef"] = modifyRef;
  exports["newRef"] = $foreign.newRef;
  exports["readRef"] = $foreign.readRef;
})(PS["Control.Monad.Eff.Ref"] = PS["Control.Monad.Eff.Ref"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.setTimeout = function (ms) {
    return function (fn) {
      return function () {
        return setTimeout(fn, ms);
      };
    };
  };
})(PS["Control.Monad.Eff.Timer"] = PS["Control.Monad.Eff.Timer"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Timer"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Prelude = PS["Prelude"];
  exports["setTimeout"] = $foreign.setTimeout;
})(PS["Control.Monad.Eff.Timer"] = PS["Control.Monad.Eff.Timer"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var traverse_ = function (dictApplicative) {
      return function (dictFoldable) {
          return function (f) {
              return foldr(dictFoldable)(function ($195) {
                  return Control_Apply.applySecond(dictApplicative.Apply0())(f($195));
              })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
          };
      };
  };
  var for_ = function (dictApplicative) {
      return function (dictFoldable) {
          return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
      };
  };
  var foldl = function (dict) {
      return dict.foldl;
  }; 
  var foldableMaybe = new Foldable(function (dictMonoid) {
      return function (f) {
          return function (v) {
              if (v instanceof Data_Maybe.Nothing) {
                  return Data_Monoid.mempty(dictMonoid);
              };
              if (v instanceof Data_Maybe.Just) {
                  return f(v.value0);
              };
              throw new Error("Failed pattern match at Data.Foldable line 131, column 1 - line 131, column 41: " + [ f.constructor.name, v.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return v(z)(v1.value0);
              };
              throw new Error("Failed pattern match at Data.Foldable line 131, column 1 - line 131, column 41: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return v(v1.value0)(z);
              };
              throw new Error("Failed pattern match at Data.Foldable line 131, column 1 - line 131, column 41: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  });
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  exports["Foldable"] = Foldable;
  exports["foldr"] = foldr;
  exports["foldl"] = foldl;
  exports["foldMap"] = foldMap;
  exports["traverse_"] = traverse_;
  exports["for_"] = for_;
  exports["foldableMaybe"] = foldableMaybe;
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
    "use strict";

  exports.toNumber = function (n) {
    return n;
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
    "use strict";          

  exports.cos = Math.cos;    

  exports.sin = Math.sin;      

  exports.pi = Math.PI;
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Math"];
  exports["cos"] = $foreign.cos;
  exports["sin"] = $foreign.sin;
  exports["pi"] = $foreign.pi;
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Int"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_DivisionRing = PS["Data.DivisionRing"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Field = PS["Data.Field"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Global = PS["Global"];
  var $$Math = PS["Math"];
  var Prelude = PS["Prelude"];
  exports["toNumber"] = $foreign.toNumber;
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.getCanvasElementByIdImpl = function(id, Just, Nothing) {
      return function() {
          var el = document.getElementById(id);
          if (el && el instanceof HTMLCanvasElement) {
              return Just(el);
          } else {
              return Nothing;
          }
      };
  };

  exports.getContext2D = function(c) {
      return function() {
          return c.getContext('2d');
      };
  };

  exports.getCanvasWidth = function(canvas) {
      return function() {
          return canvas.width;
      };
  };

  exports.getCanvasHeight = function(canvas) {
      return function() {
          return canvas.height;
      };
  };

  exports.setFillStyle = function(style) {
      return function(ctx) {
          return function() {
              ctx.fillStyle = style;
              return ctx;
          };
      };
  };

  exports.setStrokeStyle = function(style) {
      return function(ctx) {
          return function() {
              ctx.strokeStyle = style;
              return ctx;
          };
      };
  };

  exports.beginPath = function(ctx) {
      return function() {
          ctx.beginPath();
          return ctx;
      };
  };

  exports.stroke = function(ctx) {
      return function() {
          ctx.stroke();
          return ctx;
      };
  };

  exports.fill = function(ctx) {
      return function() {
          ctx.fill();
          return ctx;
      };
  };

  exports.lineTo = function(ctx) {
      return function(x) {
          return function(y) {
              return function() {
                  ctx.lineTo(x, y);
                  return ctx;
              };
          };
      };
  };

  exports.moveTo = function(ctx) {
      return function(x) {
          return function(y) {
              return function() {
                  ctx.moveTo(x, y);
                  return ctx;
              };
          };
      };
  };

  exports.closePath = function(ctx) {
      return function() {
          ctx.closePath();
          return ctx;
      };
  };

  exports.arc = function(ctx) {
      return function(a) {
          return function() {
              ctx.arc(a.x, a.y, a.r, a.start, a.end);
              return ctx;
          };
      };
  };

  exports.translate = function(t) {
      return function(ctx) {
          return function() {
              ctx.translate(t.translateX, t.translateY);
              return ctx;
          };
      };
  };

  exports.clearRect = function(ctx) {
      return function(r) {
          return function() {
              ctx.clearRect(r.x, r.y, r.w, r.h);
              return ctx;
          };
      };
  };

  exports.fillText = function(ctx) {
      return function(text) {
          return function(x) {
              return function(y) {
                  return function() {
                      ctx.fillText(text, x, y);
                      return ctx;
                  };
              };
          };
      };
  };
})(PS["Graphics.Canvas"] = PS["Graphics.Canvas"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Graphics.Canvas"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception_Unsafe = PS["Control.Monad.Eff.Exception.Unsafe"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_ArrayBuffer_Types = PS["Data.ArrayBuffer.Types"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];
  var strokePath = function (ctx) {
      return function (path) {
          return function __do() {
              var v = $foreign.beginPath(ctx)();
              var v1 = path();
              var v2 = $foreign.stroke(ctx)();
              return v1;
          };
      };
  };
  var getCanvasElementById = function (elId) {
      return $foreign.getCanvasElementByIdImpl(elId, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
  };
  var fillPath = function (ctx) {
      return function (path) {
          return function __do() {
              var v = $foreign.beginPath(ctx)();
              var v1 = path();
              var v2 = $foreign.fill(ctx)();
              return v1;
          };
      };
  };
  exports["getCanvasElementById"] = getCanvasElementById;
  exports["strokePath"] = strokePath;
  exports["fillPath"] = fillPath;
  exports["getContext2D"] = $foreign.getContext2D;
  exports["getCanvasWidth"] = $foreign.getCanvasWidth;
  exports["getCanvasHeight"] = $foreign.getCanvasHeight;
  exports["setFillStyle"] = $foreign.setFillStyle;
  exports["setStrokeStyle"] = $foreign.setStrokeStyle;
  exports["lineTo"] = $foreign.lineTo;
  exports["moveTo"] = $foreign.moveTo;
  exports["closePath"] = $foreign.closePath;
  exports["arc"] = $foreign.arc;
  exports["clearRect"] = $foreign.clearRect;
  exports["translate"] = $foreign.translate;
  exports["fillText"] = $foreign.fillText;
})(PS["Graphics.Canvas"] = PS["Graphics.Canvas"] || {});
(function(exports) {
    "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff_DOM = PS["Control.Monad.Eff.DOM"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff_Timer = PS["Control.Monad.Eff.Timer"];
  var DOM = PS["DOM"];
  var DOM_Event_MouseEvent = PS["DOM.Event.MouseEvent"];
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var DOM_HTML = PS["DOM.HTML"];
  var DOM_HTML_Event_EventTypes = PS["DOM.HTML.Event.EventTypes"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var DOM_HTML_Window = PS["DOM.HTML.Window"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];
  var FFI_Util = PS["FFI.Util"];
  var Graphics_Canvas = PS["Graphics.Canvas"];
  var $$Math = PS["Math"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];        
  var Point3D = function (x) {
      return x;
  };
  var Point2D = function (x) {
      return x;
  };
  var Angle3D = function (x) {
      return x;
  };
  var project = function (v) {
      return function (v1) {
          var yByz = v.y * $$Math.cos(v1.qz) - v.x * $$Math.sin(v1.qz);
          var yByzByx = yByz * $$Math.cos(v1.qx) + v.z * $$Math.sin(v1.qx);
          var zByzByx = v.z * $$Math.cos(v1.qx) - yByz * $$Math.sin(v1.qx);
          var xByz = v.x * $$Math.cos(v1.qz) + v.y * $$Math.sin(v1.qz);
          var xByzByxByy = xByz * $$Math.cos(v1.qy) + zByzByx * $$Math.sin(v1.qy);
          return {
              x: xByzByxByy,
              y: yByzByx
          };
      };
  };
  var half = 100.0;

  /**
 * let yByx = y * (cos qx) - z * (sin qx)
 *       zByx = z * (cos qx) + y * (sin qx)
 *       xByxByy = x * (cos qy) - zByx * (sin qy)
 *       zByxByy = zByx * (cos qy) - x * (sin qy)
 *   in
 *    Point2D { x: xByxByy, y: yByx }
 */  
  var drawLine = function (ctx) {
      return function (v) {
          return function (v1) {
              return Graphics_Canvas.strokePath(ctx)(function __do() {
                  var v2 = Graphics_Canvas.setStrokeStyle("#0000FF")(ctx)();
                  var v3 = Graphics_Canvas.moveTo(ctx)(v.x)(v.y)();
                  var v4 = Graphics_Canvas.lineTo(ctx)(v1.x)(v1.y)();
                  var v5 = Graphics_Canvas.closePath(ctx)();
                  return Data_Unit.unit;
              });
          };
      };
  };
  var drawCircle = function (ctx) {
      return function (v) {
          return function (no) {
              return Graphics_Canvas.fillPath(ctx)(function __do() {
                  var v1 = Graphics_Canvas.setFillStyle("#000000")(ctx)();
                  var v2 = Graphics_Canvas.fillText(ctx)(no)(v.x + 5.0)(v.y - 4.0)();
                  var v3 = Graphics_Canvas.setFillStyle("#FF0000")(ctx)();
                  var v4 = Graphics_Canvas.arc(ctx)({
                      x: v.x,
                      y: v.y,
                      r: 4.0,
                      start: 0.0,
                      end: $$Math.pi * 2.0
                  })();
                  return Data_Unit.unit;
              });
          };
      };
  };
  var canvasClean = function (canvas) {
      return function __do() {
          var v = Graphics_Canvas.getCanvasWidth(canvas)();
          var v1 = Graphics_Canvas.getCanvasHeight(canvas)();
          var v2 = Graphics_Canvas.getContext2D(canvas)();
          return Data_Functor["void"](Control_Monad_Eff.functorEff)(Graphics_Canvas.clearRect(v2)({
              x: 0.0 - v,
              y: 0.0 - v1,
              w: 2.0 * v,
              h: 2.0 * v1
          }))();
      };
  };
  var drawCube = function (ctx) {
      return function (drag) {
          return function (old_x) {
              return function (old_y) {
                  return function (dX) {
                      return function (dY) {
                          return function (alpha) {
                              return function (beta) {
                                  return function (gamma) {
                                      return function (v) {
                                          return Data_Functor["void"](Control_Monad_Eff.functorEff)(function __do() {
                                              var v1 = Graphics_Canvas.getCanvasElementById("canvas")();
                                              var __unused = function (dictPartial1) {
                                                  return function ($dollar48) {
                                                      return $dollar48;
                                                  };
                                              };
                                              return __unused()((function () {
                                                  if (v1 instanceof Data_Maybe.Just) {
                                                      return function __do() {
                                                          canvasClean(v1.value0)();
                                                          var v11 = project({
                                                              x: 0.0 - half,
                                                              y: 0.0 - half,
                                                              z: 0.0 - half
                                                          })({
                                                              qx: v.qx,
                                                              qy: v.qy,
                                                              qz: v.qz
                                                          });
                                                          drawCircle(ctx)(v11)("8")();
                                                          var v2 = project({
                                                              x: 0.0 - half,
                                                              y: 0.0 + half,
                                                              z: 0.0 - half
                                                          })({
                                                              qx: v.qx,
                                                              qy: v.qy,
                                                              qz: v.qz
                                                          });
                                                          drawCircle(ctx)(v2)("7")();
                                                          var v3 = project({
                                                              x: 0.0 - half,
                                                              y: 0.0 - half,
                                                              z: 0.0 + half
                                                          })({
                                                              qx: v.qx,
                                                              qy: v.qy,
                                                              qz: v.qz
                                                          });
                                                          drawCircle(ctx)(v3)("1")();
                                                          var v4 = project({
                                                              x: 0.0 - half,
                                                              y: 0.0 + half,
                                                              z: 0.0 + half
                                                          })({
                                                              qx: v.qx,
                                                              qy: v.qy,
                                                              qz: v.qz
                                                          });
                                                          drawCircle(ctx)(v4)("2")();
                                                          var v5 = project({
                                                              x: 0.0 + half,
                                                              y: 0.0 - half,
                                                              z: 0.0 - half
                                                          })({
                                                              qx: v.qx,
                                                              qy: v.qy,
                                                              qz: v.qz
                                                          });
                                                          drawCircle(ctx)(v5)("5")();
                                                          var v6 = project({
                                                              x: 0.0 + half,
                                                              y: 0.0 + half,
                                                              z: 0.0 - half
                                                          })({
                                                              qx: v.qx,
                                                              qy: v.qy,
                                                              qz: v.qz
                                                          });
                                                          drawCircle(ctx)(v6)("6")();
                                                          var v7 = project({
                                                              x: 0.0 + half,
                                                              y: 0.0 - half,
                                                              z: 0.0 + half
                                                          })({
                                                              qx: v.qx,
                                                              qy: v.qy,
                                                              qz: v.qz
                                                          });
                                                          drawCircle(ctx)(v7)("4")();
                                                          var v8 = project({
                                                              x: 0.0 + half,
                                                              y: 0.0 + half,
                                                              z: 0.0 + half
                                                          })({
                                                              qx: v.qx,
                                                              qy: v.qy,
                                                              qz: v.qz
                                                          });
                                                          drawCircle(ctx)(v8)("3")();
                                                          drawLine(ctx)(v11)(v5)();
                                                          drawLine(ctx)(v5)(v6)();
                                                          drawLine(ctx)(v6)(v2)();
                                                          drawLine(ctx)(v2)(v11)();
                                                          drawLine(ctx)(v3)(v7)();
                                                          drawLine(ctx)(v7)(v8)();
                                                          drawLine(ctx)(v8)(v4)();
                                                          drawLine(ctx)(v4)(v3)();
                                                          drawLine(ctx)(v11)(v3)();
                                                          drawLine(ctx)(v5)(v7)();
                                                          drawLine(ctx)(v6)(v8)();
                                                          drawLine(ctx)(v2)(v4)();
                                                          var v9 = Control_Monad_Eff_DOM.querySelector("#canvas")();
                                                          Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(v9)(Control_Monad_Eff_DOM.addEventListener("mousedown")(Data_Functor["void"](Control_Monad_Eff.functorEff)(function __do() {
                                                              Control_Monad_Eff_Ref.modifyRef(drag)(function (d) {
                                                                  return true;
                                                              })();
                                                              var v10 = Control_Monad_Eff_DOM.getMousePos("x")();
                                                              var v12 = Control_Monad_Eff_DOM.getMousePos("y")();
                                                              Control_Monad_Eff_Ref.modifyRef(old_x)(function (ox) {
                                                                  return Data_Int.toNumber(v10);
                                                              })();
                                                              return Control_Monad_Eff_Ref.modifyRef(old_y)(function (oy) {
                                                                  return Data_Int.toNumber(v12);
                                                              })();
                                                          })))();
                                                          Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(v9)(Control_Monad_Eff_DOM.addEventListener("mouseup")(Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_Eff_Ref.modifyRef(drag)(function (d) {
                                                              return false;
                                                          }))))();
                                                          Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(v9)(Control_Monad_Eff_DOM.addEventListener("mouseout")(Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_Eff_Ref.modifyRef(drag)(function (d) {
                                                              return false;
                                                          }))))();
                                                          Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(v9)(Control_Monad_Eff_DOM.addEventListener("mousemove")(Data_Functor["void"](Control_Monad_Eff.functorEff)(function __do() {
                                                              var v10 = Control_Monad_Eff_DOM.getMousePos("x")();
                                                              var v12 = Control_Monad_Eff_DOM.getMousePos("y")();
                                                              var v13 = Control_Monad_Eff_Ref.readRef(old_x)();
                                                              var v14 = Control_Monad_Eff_Ref.readRef(old_y)();
                                                              Control_Monad_Eff_Ref.modifyRef(dX)(function (dy) {
                                                                  return ((Data_Int.toNumber(v12) - v14) * 4.0 * $$Math.pi) / 650.0;
                                                              })();
                                                              Control_Monad_Eff_Ref.modifyRef(dY)(function (dx) {
                                                                  return ((Data_Int.toNumber(v10) - v13) * 4.0 * $$Math.pi) / 600.0;
                                                              })();
                                                              var v15 = Control_Monad_Eff_Ref.readRef(dX)();
                                                              var v16 = Control_Monad_Eff_Ref.readRef(dY)();
                                                              var v17 = Control_Monad_Eff_Ref.readRef(drag)();
                                                              var $93 = v17 === true;
                                                              if ($93) {
                                                                  Control_Monad_Eff_Ref.modifyRef(alpha)(function (al) {
                                                                      return al + v15;
                                                                  })();
                                                                  Control_Monad_Eff_Ref.modifyRef(beta)(function (bt) {
                                                                      return bt + v16;
                                                                  })();
                                                                  Control_Monad_Eff_Ref.modifyRef(old_x)(function (ox1) {
                                                                      return Data_Int.toNumber(v10);
                                                                  })();
                                                                  return Control_Monad_Eff_Ref.modifyRef(old_y)(function (oy1) {
                                                                      return Data_Int.toNumber(v12);
                                                                  })();
                                                              };
                                                              return Data_Unit.unit;
                                                          })))();
                                                          var v10 = Control_Monad_Eff_Ref.readRef(drag)();
                                                          (function () {
                                                              var $95 = v10 === false;
                                                              if ($95) {
                                                                  return function __do() {
                                                                      Control_Monad_Eff_Ref.modifyRef(dX)(function (dx) {
                                                                          return dx * 0.95;
                                                                      })();
                                                                      Control_Monad_Eff_Ref.modifyRef(dY)(function (dy) {
                                                                          return dy * 0.95;
                                                                      })();
                                                                      var v12 = Control_Monad_Eff_Ref.readRef(dX)();
                                                                      var v13 = Control_Monad_Eff_Ref.readRef(dY)();
                                                                      Control_Monad_Eff_Ref.modifyRef(alpha)(function (al) {
                                                                          return al * 0.95;
                                                                      })();
                                                                      return Control_Monad_Eff_Ref.modifyRef(beta)(function (bt) {
                                                                          return bt * 0.95;
                                                                      })();
                                                                  };
                                                              };
                                                              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                                                          })()();
                                                          var v12 = Control_Monad_Eff_Ref.readRef(alpha)();
                                                          var v13 = Control_Monad_Eff_Ref.readRef(beta)();
                                                          var v14 = Control_Monad_Eff_Ref.readRef(gamma)();
                                                          return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_Eff_Timer.setTimeout(30)(drawCube(ctx)(drag)(old_x)(old_y)(dX)(dY)(alpha)(beta)(gamma)({
                                                              qx: v12,
                                                              qy: v13,
                                                              qz: v14
                                                          })))();
                                                      };
                                                  };
                                                  throw new Error("Failed pattern match at Cube line 98, column 4 - line 99, column 4: " + [ v1.constructor.name ]);
                                              })())();
                                          });
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var main = Data_Functor["void"](Control_Monad_Eff.functorEff)(function __do() {
      var v = Graphics_Canvas.getCanvasElementById("canvas")();
      var __unused = function (dictPartial1) {
          return function ($dollar52) {
              return $dollar52;
          };
      };
      return __unused()((function () {
          if (v instanceof Data_Maybe.Just) {
              return function __do() {
                  var v1 = Graphics_Canvas.getContext2D(v.value0)();
                  var v2 = Control_Monad_Eff_Ref.newRef(0.0)();
                  var v3 = Control_Monad_Eff_Ref.newRef(0.0)();
                  var v4 = Control_Monad_Eff_Ref.newRef(0.0)();
                  var v5 = Control_Monad_Eff_Ref.newRef(0.0)();
                  var v6 = Control_Monad_Eff_Ref.newRef(0.0)();
                  var v7 = Control_Monad_Eff_Ref.newRef(false)();
                  var v8 = Control_Monad_Eff_Ref.newRef(0.0)();
                  var v9 = Control_Monad_Eff_Ref.newRef(0.0)();
                  var v10 = Graphics_Canvas.getCanvasWidth(v.value0)();
                  var v11 = Graphics_Canvas.getCanvasHeight(v.value0)();
                  var v12 = Graphics_Canvas.translate({
                      translateX: v10 / 2.0,
                      translateY: v11 / 2.0
                  })(v1)();
                  return drawCube(v1)(v7)(v8)(v9)(v5)(v6)(v2)(v3)(v4)({
                      qx: 0.0,
                      qy: 0.0,
                      qz: 0.0
                  })();
              };
          };
          throw new Error("Failed pattern match at Cube line 192, column 3 - line 193, column 3: " + [ v.constructor.name ]);
      })())();
  });
  exports["Point3D"] = Point3D;
  exports["Point2D"] = Point2D;
  exports["Angle3D"] = Angle3D;
  exports["half"] = half;
  exports["project"] = project;
  exports["drawLine"] = drawLine;
  exports["canvasClean"] = canvasClean;
  exports["drawCircle"] = drawCircle;
  exports["drawCube"] = drawCube;
  exports["main"] = main;
})(PS["Cube"] = PS["Cube"] || {});
PS["Cube"].main();
